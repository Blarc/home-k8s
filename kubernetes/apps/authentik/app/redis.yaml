apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name redis
  namespace: authentik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: *name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: *name
    spec:
      containers:
        - name: *name
          image: docker.io/library/redis:8.2.1
          ports:
            - containerPort: 6379
              name: *name
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis
  namespace: authentik
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: authentik
spec:
  selector:
    app.kubernetes.io/component: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
  type: ClusterIP
