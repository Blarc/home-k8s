apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name paperless-ngx
  namespace: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: *name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: *name
    spec:
      containers:
        - name: *name
          image: ghcr.io/paperless-ngx/paperless-ngx:2.17.1
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: PAPERLESS_DBUSER
              valueFrom:
                secretKeyRef:
                  # created by cloudnative-pg operator and needs to match with name defined in postgres cluster CRD
                  name: postgres-app
                  key: user
            - name: PAPERLESS_DBPASS
              valueFrom:
                secretKeyRef:
                  # created by cloudnative-pg operator and needs to match with name defined in postgres cluster CRD
                  name: postgres-app
                  key: password
          envFrom:
            - configMapRef:
                name: paperless-ngx
            - secretRef:
                name: paperless-ngx
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: data
              mountPath: /usr/src/paperless/data
            - name: media
              mountPath: /usr/src/paperless/media
            - name: export
              mountPath: /usr/src/paperless/export
            - name: consume
              mountPath: /usr/src/paperless/consume
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: paperless-ngx-data
        - name: media
          persistentVolumeClaim:
            claimName: paperless-ngx-media
        - name: export
          persistentVolumeClaim:
            claimName: paperless-ngx-export
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-ngx-consume
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-data
  namespace: paperless-ngx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-media
  namespace: paperless-ngx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-export
  namespace: paperless-ngx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-ngx-consume
  namespace: paperless-ngx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: paperless-ngx
spec:
  selector:
    app.kubernetes.io/component: paperless-ngx
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  type: ClusterIP
