# source: https://medium.com/@s.hameedakmal/wireguard-vpn-in-a-kubernetes-cluster-e306fdc69731
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wireguard
  namespace: kube-system
  labels:
    app: wireguard
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: wireguard
  template:
    metadata:
      labels:
        app: wireguard
    spec:
      restartPolicy: Always
      containers:
        - name: wireguard
          image: lscr.io/linuxserver/wireguard:latest
          securityContext:
            privileged: true
          ports:
            - containerPort: 51820
              protocol: UDP
          env:
            - name: LOG_LEVEL
              value: info
            - name: TZ
              value: 'Europe/Ljubljana'
          envFrom:
            - secretRef:
                name: wireguard-secret
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
          volumeMounts:
            - mountPath: "/config/"
              name: wireguard-config
      # Create directory on node where WireGuard configuration will be saved
      volumes:
        - name: wireguard-config
          hostPath:
            path: /var/data/wireguard-config
            type: DirectoryOrCreate
      # Enable scheduling on control-plane
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      # Schedule it on control-plane
      nodeName: control-plane-1
---
# Service definition for WireGuard, exposes its UDP port as a NodePort service externally on <NodeIP:31820>
apiVersion: v1
kind: Service
metadata:
  name: wireguard
  namespace: kube-system
  labels:
    app: wireguard
spec:
  type: NodePort
  selector:
    app: wireguard
  ports:
    - port: 51820
      targetPort: 51820
      nodePort: 31820
      protocol: UDP
